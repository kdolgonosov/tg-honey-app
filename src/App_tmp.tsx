import "./App.css";
// import Header from "./components/Header/Header";
import Chat from "./components/Chat/Chat";
import { useEffect, useState } from "react";
// import { getInitialMessages } from "./utils/api";
import { AnyMessage, ICharacter } from "./utils/interfaces";
// import NotFound from "./components/NotFound/NotFound";
// import Loader from "./components/Loader/Loader";

const mockCharacters: Record<string, ICharacter> = {
  annaAleksndrovna: {
    id: "1",
    name: "–ê–Ω–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞",
    avatar: "https://placehold.jp/150x150.png",
  },
  olegVladimirovich: {
    id: "2",
    name: "–û–ª–µ–≥ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
    avatar: "https://placehold.jp/150x150.png",
  },
  kostya: { id: "3", name: "–õ—é–±–∏–º—ã–π –º—É–∂ ‚ù§Ô∏è", avatar: "../kostya-avatar-3.jpg" },
  igor: { id: "4", name: "–ò–≥–æ—Ä—å", avatar: "https://placehold.jp/150x150.png" },
  berta: { id: "5", name: "–ë–µ—Ä—Ç–∞", avatar: "https://placehold.jp/150x150.png" },
  sky: { id: "6", name: "–°–∫–∞–π", avatar: "../sky-avatar-2.jpg" },
  kristina: { id: "7", name: "–ö—Ä–∏—Å—Ç–∏–Ω–∞", avatar: "../kristina-avatar.jpg" },
  alina: { id: "8", name: "–ê–ª–∏–Ω–∞", avatar: "../alina-avatar.jpg" },
  ksenia: { id: "9", name: "–ö—Å—é—à–∞", avatar: "../ksenia-avatar.jpg" },
  mary: { id: "10", name: "–ú–∞—Ä–∏", avatar: "../mary-avatar.jpg" },
  linh: { id: "11", name: "Linh Tr∆∞∆°ng V·ªπ", avatar: "../linh-avatar.jpg" },
};

const mockMessages: AnyMessage[] = [
  {
    message_id: "1",
    text: "–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—Ü–µ! –°–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å, –∏ —è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è —Ç–µ–±—è –∫–æ–µ-—á—Ç–æ –Ω–µ–æ–±—ã—á–Ω–æ–µ...",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "2",
    text: "–ö–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –¥–µ–Ω—å —Ç–∞–∫–∏–º –≤–æ–ª—à–µ–±–Ω—ã–º?",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "3",
    text: "15 –¥–µ–∫–∞–±—Ä—è, —ç—Ç–æ ...",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "4",
    text: "–îe–Ω—å –∫o—àa—á—å–∏x –øac—Ç—Éxo–≤",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "5",
    text: "–îe–Ω—å –∫a–ø–∫e–π–∫a",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "6",
    text: "–ê –µ—â—ë...",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "7",
    text: "–¢–≤–æ–π –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "8",
    text: "–ü–æ—Å–µ–º—É –º—ã –≤—Å–µ –∑–¥–µ—Å—å –∏ —Å–æ–±—Ä–∞–ª–∏—Å—å",
    type: "text",
    author: "bot",
    character: mockCharacters.kostya,
  },
  {
    message_id: "9",
    type: "keyboard",
    keyboard: [
      [
        {
          button_id: "01",
          text: "–ö—Ç–æ –≤—Å–µ? üëÄ",
          placeholder: "–ö—Ç–æ –≤—Å–µ? üëÄ",
          next_task_id: "01",
          next_message_character: mockCharacters.sky,
        },
      ],
    ],
    author: "user",
    character: mockCharacters.berta,
  },
];

function AppOld({
  endChat,
}: {
  endChat: React.Dispatch<React.SetStateAction<string>>;
}) {
  const mockMessagesParts: AnyMessage[][] = [
    [
      {
        message_id: "10",
        text: "*–¥–æ–≤–æ–ª—å–Ω–æ–µ –º—É—Ä—á–∞–Ω—å–µ*",
        type: "text",
        author: "bot",
        character: mockCharacters.sky,
      },
      {
        message_id: "11",
        text: "–õ—é–±–ª—é —Ç–µ–±—è, –º–∞–º–∞! –° –º—è—É —Ä–æ–∂–¥–µ–Ω–∏—è!",
        type: "text",
        author: "bot",
        character: mockCharacters.sky,
      },
      {
        message_id: "12",
        text: "–ñ–µ–ª–∞—é —Ç–µ–±–µ –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –≤–∫—É—Å–Ω—è—à–µ–∫ –∏ —Ç–µ–ø–ª–æ–π –ª–µ–∂–∞–Ω–∫–∏",
        type: "text",
        author: "bot",
        character: mockCharacters.sky,
      },
      {
        message_id: "13",
        text: "–ê –µ—â—ë... –ê –º—ã –∫—É—à–∞—Ç—å —Ç–æ –±—É–¥–µ–º? ü§î",
        type: "text",
        author: "bot",
        character: mockCharacters.sky,
      },
      {
        message_id: "14",
        // text: '–ü—Ä–∏–≤–µ—Ç –ù–∞—Å—Ç—é—à–∞!',
        type: "keyboard",
        keyboard: [
          [
            {
              button_id: "02",
              text: "–°–ø–∞—Å–∏–±–æ, –∫–æ—Ç–æ—Ñ–µ–π –Ω–∞—à üíñ",
              placeholder: "–°–ø–∞—Å–∏–±–æ, –∫–æ—Ç–æ—Ñ–µ–π –Ω–∞—à üíñ",
              next_task_id: "02",
              next_message_character: mockCharacters.alina,
            },
          ],
        ],
        author: "user",
        character: mockCharacters.berta,
      },
    ],
    [
      {
        message_id: "15",
        text: `–û–ª–µ–≥–æ–≤–Ω–∞, –ª—é–±–∏–º–∞—è –º–æ—è, —Å —Ç–≤–æ–∏–º –¥–Ω–µ–º –¥–æ—Ä–æ–≥–∞—è üíñ
            –ë–µ–∑—É–º–Ω–æ –ª—é–±–ª—é —Ç–µ–±—è, –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—É—é —Å —Ç–æ–±–æ–π, –∫–∞–∂–¥—ã–π —Ä–∞—Å—Å–∫–∞–∑–∞–Ω–Ω—É—é —Ç–æ–±–æ–π –∏—Å—Ç–æ—Ä–∏—é, –∫–∞–∂–¥—É—é –≤—ã—Å–ª—É—à–∞–Ω–Ω—É—é –º–æ—é, –∫–∞–∂–¥–æ–µ —Ç–≤–æ–µ ¬´–∫—Ä—ã—Å–∞¬ª –≤ –º–æ–π –∞–¥—Ä–µ—Å ü•π
            –°–µ–π—á–∞—Å —É–∂–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –∂–∏–∑–Ω—å –±–µ–∑ —Ç–µ–±—è –∏ —Ç–≤–æ–µ–≥–æ —Å–º–µ—Ö–∞
            –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å —Ç–≤–æ–∏–º –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è üòò
            –û—Å—Ç–∞–≤–∞–π—Å—è —Ç–∞–∫–æ–π –∂–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π, –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π, –∫—Ä–∞—Å–∏–≤–æ–π, –º–∏–ª–æ–π –¥–µ–≤—É—à–∫–æ–π. –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–π –∂–µ–Ω–æ–π, —Ö–æ–∑—è—é—à–∫–æ–πü©∑
            –ü—É—Å—Ç—å –∂–∏–∑–Ω—å –¥–∞—Ä–∏—Ç –ª–∏—à—å —Ä–∞–¥–æ—Å—Ç—å –∏ —Å—á–∞—Å—Ç—å–µ, –¥–æ–º–∞ –≤—Å–µ–≥–¥–∞ —Ü–∞—Ä–∏—Ç –ª—é–±–æ–≤—å –∏ —É—é—Ç ü•∫`,
        type: "text",
        author: "bot",
        character: mockCharacters.alina,
      },
      {
        message_id: "16",
        // text: '–ü—Ä–∏–≤–µ—Ç –ù–∞—Å—Ç—é—à–∞!',
        type: "keyboard",
        keyboard: [
          [
            {
              button_id: "03",
              text: "üíñ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å üíñ",
              placeholder: "–°–ø–∞—Å–∏–±–æ üíñ",
              next_task_id: "03",
              next_message_character: mockCharacters.kristina,
            },
          ],
        ],
        author: "user",
        character: mockCharacters.berta,
      },
    ],
    [
      {
        message_id: "17",
        text: `–ê–Ω–∞—Å—Ç–µ–π—à–∞, –ø—Ä–∏–≤–µ—Ç–∏–∫!
            –° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —Ç–µ–±—è, –º–æ–π —Ö–æ—Ä–æ—à–∏–πüíû
            –•–æ—á—É –ø–æ–∂–µ–ª–∞—Ç—å —Ç–µ–±–µ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ, —á—Ç–æ–±—ã —Ç—ã –≤–æ–ø–ª–æ—Ç–∏–ª–∞ –≤—Å–µ —Å–≤–æ–∏ —Ü–µ–ª–∏! –Ø –∏—Å–∫—Ä–µ–Ω–Ω–µ –∂–µ–ª–∞—é —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å, –∏ —á—Ç–æ–±—ã –Ω–∏—á—Ç–æ –Ω–µ –ø–æ–º–µ—à–∞–ª–æ —Ç–µ–±–µ –∏–¥—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–æ—Ä–æ–≥–æ–π. –ü—É—Å—Ç—å –≤—Å–µ —É —Ç–µ–±—è —Å–ª–æ–∂–∏—Ç—Å—è –Ω–∞–∏–ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–ºüëÑ`,
        type: "text",
        author: "bot",
        character: mockCharacters.kristina,
      },
      {
        message_id: "18",
        text: `–î–∞–π –±–æ–≥ –º—ã –≤–º–µ—Å—Ç–µ –∑–∞–∫–æ–Ω—á–∏–º –∏–Ω—Å—Ç–∏—Ç—É—ÇüòÇü´† –Ø —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ç—ã —Å—Ç–∞–Ω–µ—à—å —Ö–æ—Ä–æ—à–∏–º, –µ—Å–ª–∏ –Ω–µ –ª—É—á—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º (—è –≤–∏–∂—É —ç—Ç–æ —É–∂–µ —Å–µ–π—á–∞—Å)üë©‚Äç‚öïÔ∏è –ù–∞–¥–µ—é—Å—å, —á—Ç–æ –≤ –Ω–æ–≤–æ–º –≥–æ–¥—É —Å–ª—É—á–∏—Ç—Å—è –≤—Å–µ, —á–µ–≥–æ —Ç—ã —Ç–æ–ª—å–∫–æ –ø–æ–∂–µ–ª–∞–µ—à—åüòò`,
        type: "text",
        author: "bot",
        character: mockCharacters.kristina,
      },
      {
        message_id: "19",
        text: `P.S. –º—ã –∑–∞–∫–æ–Ω—á–∏–º 3 –∫—É—Ä—Å!!!!!!!!!
              —Ç–≤–æ—è –ö—Ä—ã—Å—Ç–∏–Ω–∞üêÄüêÄ`,
        type: "text",
        author: "bot",
        character: mockCharacters.kristina,
      },
      {
        message_id: "20",
        // text: '–ü—Ä–∏–≤–µ—Ç –ù–∞—Å—Ç—é—à–∞!',
        type: "keyboard",
        keyboard: [
          [
            {
              button_id: "04",
              text: "üíñ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å üíñ",
              placeholder: "–ö—Ä–∏—Å—Ç–∏–Ω–∞ ü•πüíñ",
              next_task_id: "04",
              next_message_character: mockCharacters.ksenia,
            },
          ],
        ],
        author: "user",
        character: mockCharacters.berta,
      },
    ],
    [
      {
        message_id: "21",
        text: "–ß—Ç–æ –∂, –∞ —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∏–≥—Ä–∞—Ç—å –∏ –ø–æ—Ç—è–ø–∞—Ç—å –≤ —Å–µ—Ä–¥–µ—á–∫–æ",
        type: "text",
        author: "bot",
        character: mockCharacters.kostya,
      },
      {
        message_id: "22",
        text: "–ù–æ –Ω–µ –∑–∞–±—É–¥—å –Ω–∞-...",
        type: "text",
        author: "bot",
        character: mockCharacters.kostya,
      },
      {
        message_id: "23",
        text: "–ü–æ–≥–æ–¥–∏-–∫–∞, –º—ã –∑–∞–±—ã–ª–∏ –∫–æ–µ-–∫–æ–≥–æ",
        type: "text",
        author: "bot",
        character: mockCharacters.kostya,
      },
      {
        message_id: "24",
        text: "–¢–µ–ª–µ–≥—Ä–∞–º–º–∞ –∑–∞–¥–µ—Ä–∂–∞–ª–∞—Å—å",
        type: "text",
        author: "bot",
        character: mockCharacters.kostya,
      },
      {
        message_id: "25",
        // text: '–ü—Ä–∏–≤–µ—Ç –ù–∞—Å—Ç—é—à–∞!',
        type: "keyboard",
        keyboard: [
          [
            {
              button_id: "05",
              text: "–ö—Ç–æ –∂–µ —Ç–∞–º? üëÄ",
              placeholder: "–ö—Ç–æ –∂–µ —Ç–∞–º? üëÄ",
              next_task_id: "05",
              next_message_character: mockCharacters.linh,
              // customOnClick: endChat,
            },
          ],
        ],
        author: "user",
        character: mockCharacters.berta,
      },
    ],
    [
      {
        message_id: "26",
        text: "–° –î–ù–Å–ú –†–û–ñ–î–ï–ù–ò–Ø!!!!ü´∂üèª‚ù§Ô∏èü•∞üòçü´∂üèª ü•≥",
        type: "text",
        author: "bot",
        character: mockCharacters.linh,
      },
      {
        message_id: "27",
        text: "–ñ–µ–ª–∞—é —Ç–µ–±–µ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ‚ù§Ô∏èü´∂üèªüòç",
        type: "text",
        author: "bot",
        character: mockCharacters.linh,
      },
      {
        message_id: "28",
        text: "–ß—Ç–æ–±—ã –≤—Å–µ —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Å–±—ã–ª–∏—Å—åü´∂üèª‚ù§Ô∏è",
        type: "text",
        author: "bot",
        character: mockCharacters.linh,
      },
      {
        message_id: "29",
        text: "–Ø—Ä–∫–æ–≥–æ –¥–Ω—è! –•–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è ‚ù§Ô∏èü´∂üèª",
        type: "text",
        author: "bot",
        character: mockCharacters.linh,
      },
      {
        message_id: "30",
        text: "—è –Ω–∞–¥–µ—é—Å—å, –º—ã —É–≤–∏–¥–∏–º—Å—è —Å–Ω–æ–≤–∞ü•πü•∫",
        type: "text",
        author: "bot",
        character: mockCharacters.linh,
      },
      {
        message_id: "31",
        text: "From Vietnam with loveüíï",
        type: "text",
        author: "bot",
        character: mockCharacters.linh,
      },
      {
        message_id: "32",
        // text: "From Vietnam with loveüíï",
        type: "attachment",
        author: "bot",
        attachments: [
          {
            id: "001",
            extension: "jpg",
            name: "test",
            size_in_kbytes: 1,
            url: "../linh-picture.jpg",
            type: "image",
          },
        ],
        character: mockCharacters.linh,
      },
      {
        message_id: "33",
        // text: '–ü—Ä–∏–≤–µ—Ç –ù–∞—Å—Ç—é—à–∞!',
        type: "keyboard",
        keyboard: [
          [
            {
              button_id: "06",
              text: "–õ–∏–Ω—å ü•πü•∫",
              placeholder: "–õ–∏–Ω—å ü•πü•∫",
              next_task_id: "06",
              next_message_character: mockCharacters.kostya,
              // customOnClick: endChat,
            },
          ],
        ],
        author: "user",
        character: mockCharacters.berta,
      },
    ],

    [
      {
        message_id: "34",
        text: "–¢–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ –º–æ–∂–µ—à—å –∏–¥—Ç–∏ —Ç—è–ø–∞—Ç—å —Å–µ—Ä–¥–µ—á–∫–æ",
        type: "text",
        author: "bot",
        character: mockCharacters.kostya,
      },
      {
        message_id: "35",
        text: "–ù–æ –Ω–µ –∑–∞–±—É–¥—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –ø–æ–¥ –Ω–∏–º!",
        type: "text",
        author: "bot",
        character: mockCharacters.kostya,
      },
      {
        message_id: "36",
        // text: '–ü—Ä–∏–≤–µ—Ç –ù–∞—Å—Ç—é—à–∞!',
        type: "keyboard",
        keyboard: [
          [
            {
              button_id: "07",
              text: "–•–æ—Ä–æ—à–æ üíñ",
              placeholder: "–•–æ—Ä–æ—à–æ üíñ",
              next_task_id: "07",
              next_message_character: mockCharacters.alina,
              customOnClick: endChat,
            },
          ],
        ],
        author: "user",
        character: mockCharacters.berta,
      },
    ],
  ];
  const [initMessages, setInitMessages] = useState<AnyMessage[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  // const [error, setError] = useState(false);
  const questId = window.location.pathname.split("/chat/")[1];
  useEffect(() => {
    setTimeout(() => {
      setInitMessages(mockMessages);
      setIsLoading(false);
    }, 2000);
  }, []);
  return (
    <>
      {!isLoading && (
        <Chat
          questId={questId}
          initMessages={initMessages}
          messages={mockMessagesParts}
          endChat={endChat}
        />
      )}
    </>
  );
}

export default AppOld;
